---
ssl_register_domain_name: "{{ ansible_host }}"

my_users:
  brice: "{{ common_users.brice_openbsd }}"
  vickie: "{{ common_users.vickie_openbsd }}"

sshd_config:
  Port: 65522
  VersionAddendum: "123"
  PermitRootLogin: without-password
  UseDNS: 'no'
sshd_banner_enable: 'false'

letsencrypt_domains:
  - name: "{{ ssl_register_domain_name }}"

  
#ip_forward_enable: true
#ip_forward_sysctl_value: net.inet.ip.forwarding

ntp_config_server : ['0.freebsd.pool.ntp.org' , '1.freebsd.pool.ntp.org', '2.freebsd.pool.ntp.org']

pkg_config_openbsd_mtier_enable: true
pkg_config_openbsd_mtier_url: 'https://stable.mtier.org/updates/%c/%a/'
pkg_config_openbsd_url: 'http://ftp.fr.openbsd.org/pub/OpenBSD/%c/packages/%a/'

resolv_nameservers:
  - 8.8.8.8
  - 8.8.4.4

transmission_rpc_white_list: "127.0.0.1,192.168.255.*"
transmission_blocklist_url: "http://www.wael.name/wael.list.p2p.gz"
transmission_blocklist_enabled: 'true'

nfs_exports: |
  /var/transmission/Downloads -ro -network=127.0.0.0 -mask=255.0.0.0

pf_blockiplist_pf_table: "blacklist"

pf_role_enable: True
pf_ftpproxy_enable: True
pf_ip_forward_enable: True
pf_tables:
  - name: 'some french IPv4 ranges'
    dest: '/etc/pf_tables/pf.table.fr_ip_range'
    content: "{{ lookup('file','/etc/ansible/ressources/pf.table.fr_ip_range') }}"
pf_file_content: |
  # ansible managed, do not edit by hand !
  ##########################################

  ##macro
  ################
  main="vio0"
  vpn_home="{{ openvpn_instance_home.openvpn_dev }}"
  vpn_warrior="{{ openvpn_instance_warrior.openvpn_dev }}"
  table <internet-dns> { 8.8.8.8, 8.8.4.4 }
  table <{{ pf_blockiplist_pf_table }}>
  table <FR_IP_RANGE>  persist file '/etc/pf_tables/pf.table.fr_ip_range'
  #  table <lan_openvpn_home_site> { 172.31.1.20 , 172.31.5.100 }
  table <lan_openvpn_home_site> { 172.31.2.131 , 172.31.1.0/24 }
  table <bruteforce> persist
  #  p2p_redirect_ports_host1= "{ 80 , 443 }"
  #  p2p_redirect_ports_host1= "{ 80 , 443 }"
  #  p2p_host1= "172.31.1.20"
  openvpn_server_ports= "{ {{ openvpn_instance_warrior_port }} , {{ openvpn_instance_home_port }}  }"
  p2p_ports_localhost= "{ 55413 }"
  ssh_port_localhost= 65522
  http_ports_localhost= "{ 80,443 }"
  kms_port_tohome="61688"
  kms_host="172.31.200.100"
  ##global
  ################
  set skip on lo
  #em0 is for vagrant stuff
  set skip on em0
  match in all scrub (no-df)
 
  #default policy
  block all
 
  ##nat rules
  ################
  match out on $main from any to any nat-to ($main) tagged FROM_VPN
 
  ## rdr rules
  #pass in quick on $main proto udp from any to $main:0  port $p2p_redirect_udp_ports_host1 rdr-to $p2p_host1 tag REDIRECT_PORT_TO_VPN
  #pass in quick on $main proto tcp from any to $main:0  port $p2p_redirect_tcp_ports_host1 rdr-to $p2p_host1 tag REDIRECT_PORT_TO_VPN  pass in quick on $main proto tcp from <FR_IP_RANGE> to $main:0 port $kms_port_tohome rdr-to $kms_host tag REDIRECT_PORT_TO_VPN
 
  ##fw rules
  ################
  block in quick from urpf-failed label uRPF
  block quick from <{{ pf_blockiplist_pf_table }}>
  block return quick to <{{ pf_blockiplist_pf_table }}>

  anchor "ftp-proxy/*"

  pass in quick on $vpn_home inet proto tcp from <lan_openvpn_home_site> to ! self port 21 divert-to 127.0.0.1 port 8021
  pass in quick on $vpn_warrior inet proto tcp from <lan_openvpn_warrior> to ! self port 21 divert-to 127.0.0.1 port 8021
  pass quick on $vpn_home from <lan_openvpn_home_site> to any tag FROM_VPN
  pass quick on $vpn_warrior from {{ lan_openvpn_instance_warrior_pf }} to any tag FROM_VPN

  pass in quick on $main proto tcp from any to $main:0 port $ssh_port_localhost  flags S/SA keep state (max-src-conn 6, max-src-conn-rate 6/60,overload <bruteforce> flush global) 
  
  pass in quick on $main proto udp from any to $main:0 port $openvpn_server_ports 
  pass in quick on $main proto icmp from any to  $main:0 icmp-type echoreq 

  pass in quick on $main proto udp from any to $main:0 port $p2p_ports_localhost
  pass in quick on $main proto tcp from any to $main:0 port $p2p_ports_localhost

  pass in quick on $main proto tcp from any to $main:0 port $http_ports_localhost
  #enforce policies for outbound interfaces
  pass out quick on $main tagged FROM_VPN
  pass quick on $vpn_home tagged REDIRECT_PORT_TO_VPN
 
  # allow all in vpn_home 
  pass quick on $vpn_home 
 
  # firewall is allowed to do all
  pass out quick from self to any

openvpn_instance_home:
  openvpn_clients_fetch_datas: True
  openvpn_host: '{{ ansible_host }}'
  openvpn_auth: 'SHA512'
  openvpn_dev: tun1
  openvpn_tls_cipher: 'ECDHE-RSA-CHACHA20-POLY1305'
  openvpn_topology: subnet
  openvpn_port: '{{ openvpn_instance_home_port }}'
  openvpn_max_clients: 4
  openvpn_server: '{{ lan_openvpn_instance_home_openvpn }}'
  openvpn_connection_alias: "home_{{ ansible_host }}"
  openvpn_use_certs: yes
  openvpn_clients_certs: [ 'home2vps' ]
  openvpn_check_username_in_cert: yes
  openvpn_use_auth_file: yes
  openvpn_use_auth_file_users:
    - "{{ vault_common_users.home2vps_apr1_user }}"
  openvpn_server_options:
     - "route 172.31.2.131 255.255.255.255"
     - "route 172.31.1.0 255.255.255.0"
     - "route 172.31.200.100 255.255.255.255"
  openvpn_clients_config:
   'home2vps':
     content: |
       iroute 172.31.2.131 255.255.255.255
       iroute 172.31.1.0 255.255.255.0
       iroute 172.31.200.100 255.255.255.255
openvpn_instance_warrior:
  openvpn_tls_cipher: 'ECDHE-RSA-CHACHA20-POLY1305'
  openvpn_clients_fetch_datas: True
  openvpn_auth: 'SHA512'
  openvpn_host: '{{ ansible_host }}'
  openvpn_dev: tun0
  openvpn_topology: subnet
  openvpn_port: '{{ openvpn_instance_warrior_port }}'
  openvpn_max_clients: 10
  openvpn_server: '{{ lan_openvpn_instance_warrior_openvpn }}'
  openvpn_connection_alias: "warrior_{{ ansible_host }}"
  openvpn_clients_certs: [ 'brice', 'vickie' ]
  openvpn_use_certs: yes
  openvpn_check_username_in_cert: yes
  openvpn_use_auth_file: yes
  openvpn_use_auth_file_users:
    - "{{ vault_common_users.brice_apr1_user }}"
    - "{{ vault_common_users.vickie_apr1_user }}"
  openvpn_server_options:
    - 'push "redirect-gateway def1 bypass-dhcp"'
    - 'push "dhcp-option DNS 8.8.8.8"'
    - 'push "dhcp-option DNS 8.8.4.4"'

httpd_config: |
  # ansible managed, do not edit by hand
  ######################################################

  # we dedicate default is for http only and acme-client
  include "/etc/http_letsencrypt_only.conf" 

  # 
  server {{ ansible_host }} {
    listen on * tls port 443

    tls certificate "/etc/ssl/acme/fullchain.pem"
    tls key "/etc/ssl/acme/private/privkey.pem"

    root "/var/www/{{ ansible_host }}"
  } 
nginx_additional_files:
  test_header: |
   add_header X-Frame-Options "DENY";
   add_header X-XSS-Protection "1;mode=block";
   add_header X-Content-Type-Options "nosniff";
   add_header Content-Security-Policy "script-src 'self'; object-src 'self'";
   add_header Referrer-Policy "same-origin";

nginx_config: |
  worker_processes  1;
  worker_rlimit_nofile 1024;
  events {
    worker_connections  800;
  }
  http {
    include       mime.types;
    default_type  application/octet-stream;
    index         index.html index.htm;
    keepalive_timeout  65;
    server_tokens off;

    upstream php70-handler {
      #server 127.0.0.1:9000;
      server unix:run/php-fpm.sock;
    }
    map $http_user_agent $excluded_useragent {
        "Zabbix"        1;
        default         0;
    }

    server {
      # apprt for acme, not used
      listen       80;
      server_name  {{ ansible_default_ipv4.address }}; 
      root         /var/www/htdocs;
      error_page   500 502 503 504  /50x.html;
      location / {
        root /var/www/htdocs;
        if ($excluded_useragent) {
           access_log off;
           return 200;
        }
      }
      location /.well-known/acme-challenge {
        rewrite ^/.well-known/acme-challenge(/.*)$ /acme$1 last;
      }
      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }

    }


    server {
      listen 443 ssl http2;
      server_name {{ nextcloud_fqdn }} ;
      access_log logs/{{ nextcloud_fqdn }}_ssl_access.log;
      error_log logs/{{ nextcloud_fqdn }}_ssl_error.log error;
      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
      ssl_prefer_server_ciphers on;
      ssl_dhparam /etc/ssl/nginx_dhparam.pem;
      ssl_session_timeout 5m;
      ssl_session_cache shared:SSL:1m;
      ssl_certificate_key /etc/ssl/private/{{ nextcloud_fqdn }}.key;
      ssl_certificate /etc/ssl/{{ nextcloud_fqdn }}.fullchain.pem;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header X-Robots-Tag none;
      add_header X-Download-Options noopen;
      add_header X-Permitted-Cross-Domain-Policies none;
      add_header Strict-Transport-Security "max-age=15768000";
      add_header Referrer-Policy strict-origin;
      # Path to the root of your installation
      root /var/www/htdocs/nextcloud/;

      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
       }
     # The following 2 rules are only needed for the user_webfinger app.
     # Uncomment it if you're planning to use this app.
     #rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
     #rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json
     # last;

     location = /.well-known/carddav {
       return 301 $scheme://$host/remote.php/dav;
     }
     location = /.well-known/caldav {
       return 301 $scheme://$host/remote.php/dav;
     }

     # set max upload size
     client_max_body_size 512M;
     fastcgi_buffers 64 4K;

    # Enable gzip but do not remove ETag headers
     gzip on;
     gzip_vary on;
     gzip_comp_level 4;
     gzip_min_length 256;
     gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
     gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

     # Uncomment if your server is build with the ngx_pagespeed module
     # This module is currently not supported.
     #pagespeed off;
     location / {
        rewrite ^ /index.php$request_uri;
     }

     location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        deny all;
     }
     location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
        deny all;
     }
     location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+)\.php(?:$|/) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;
        #Avoid sending the security headers twice
        fastcgi_param modHeadersAvailable true;
        fastcgi_param front_controller_active true;
        fastcgi_pass php70-handler;
        fastcgi_intercept_errors on;
        fastcgi_request_buffering off;
     }
     location ~ ^/(?:updater|ocs-provider)(?:$|/) {
        try_files $uri/ =404;
        index index.php;
     }
     # Adding the cache control header for js and css files
     # Make sure it is BELOW the PHP block
     location ~ \.(?:css|js|woff|svg|gif)$ {
        try_files $uri /index.php$request_uri;
        add_header Cache-Control "public, max-age=15778463";
        # Add headers to serve security related headers (It is intended to
        # have those duplicated to the ones above)
        # Before enabling Strict-Transport-Security headers please read into
        # this topic first.
        # add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
        #
        # WARNING: Only add the preload option once you read about
        # the consequences in https://hstspreload.org/. This option
        # will add the domain to a hardcoded list that is shipped
        # in all major browsers and getting removed from this list
        # could take several months.
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        # Optional: Don't log access to assets
        access_log off;
     }

     location ~ \.(?:png|html|ttf|ico|jpg|jpeg)$ {
        try_files $uri /index.php$request_uri;
        # Optional: Don't log access to other assets
        access_log off;
     }
   }

    server {
      listen 443 ssl default_server;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; 
      ssl_protocols TLSv1.2;
      server_name 94.242.58.41;
      access_log logs/default_ssl_access.log;
      error_log logs/default_ssl_error.log error;
      ssl_certificate_key /etc/ssl/private/nginx_default_ssl.key;
      ssl_certificate /etc/ssl/nginx_default_ssl.crt;
      root         /var/www/htdocs;
      location / {
        root /var/www/htdocs;
        if ($excluded_useragent) {
           access_log off;
           return 200;
        }
      }
      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }

    }
    server {
      listen 443 ssl;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      ssl_protocols TLSv1.2;
      server_name {{ libresonic_fqdn }};
      ssl_certificate_key /etc/ssl/private/{{ libresonic_fqdn }}.key;
      ssl_certificate /etc/ssl/{{ libresonic_fqdn }}.fullchain.pem;
      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
      ssl_prefer_server_ciphers on;
      ssl_dhparam /etc/ssl/nginx_dhparam.pem;
      ssl_session_timeout 5m;
      ssl_session_cache shared:SSL:1m;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' www.gstatic.com; img-src 'self' *.akamaized.net; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src 'self'; object-src 'none'";
      location / {
        proxy_pass http://127.0.0.1:8080/ ;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host  $http_host;
        proxy_set_header Host              $http_host;
        proxy_max_temp_file_size           0;
        proxy_redirect    http://  https://;
      }
    }   
    server {
      listen 443 ssl http2;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      ssl_protocols TLSv1.2;
      server_name {{ ansible_host }};
      root /var/www/{{ ansible_host }};

      ssl_certificate_key /etc/ssl/private/{{ ssl_register_domain_name }}.key;
      ssl_certificate /etc/ssl/{{ ssl_register_domain_name }}.fullchain.pem;
      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
      ssl_prefer_server_ciphers on;
      ssl_dhparam /etc/ssl/nginx_dhparam.pem;
      ssl_session_timeout 5m;
      ssl_session_cache shared:SSL:1m;

      access_log logs/{{ ansible_host }}_ssl_access.log;
      error_log logs/{{ ansible_host }}_ssl_error.log error;

      location / {
        if ($excluded_useragent) {
           access_log off;
           return 200;
        }
      }

      location /service/transmission/ {
        proxy_pass http://127.0.0.1:9091/transmission/ ;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass_header X-Transmission-Session-Id;
        auth_basic "Restricted";
        auth_basic_user_file /var/www/{{ ansible_host}}/service/.htpasswd;
      }
      
      location /service/transmission-download/ {
        auth_basic "Restricted";
        auth_basic_user_file /var/www/{{ ansible_host}}/service/.htpasswd;
        autoindex on;
      }
      location /service/jdownloader-download/ {
        auth_basic "Restricted";
        auth_basic_user_file /var/www/{{ ansible_host}}/service/.htpasswd;
        autoindex on;
      }

      location /service/ {
        auth_basic "Restricted";
        auth_basic_user_file /var/www/{{ ansible_host}}/service/.htpasswd;
      }
      #!!! IMPORTANT !!! We need to hide the password file from prying eyes
      # This will deny access to any hidden file (beginning with a .period)
      location ~ /\. { deny  all; }
    }
  }
