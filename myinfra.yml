---
- hosts: all
  tasks:
     - group_by: key=OS_{{ ansible_os_family }}
  tags: [ 'pkg', 'openup' ]

- hosts: all
  roles:
    - ansible.motd
    - ansible.ntp
    - ansible.sshd
    - ansible-resolv
    - ansible.pkg_config
  tags: [ 'common' ]

- hosts: OS_FreeBSD
  tasks:
    - pkgng: name={{ item }} state=present
      with_items: "{{ my_os_packages|default('') }}"
    - file: src=/usr/local/bin/bash dest=/bin/bash state=link owner=root group=wheel
  tags: [ 'pkg' ]

- hosts: OS_OpenBSD
  tasks:
    - name: os packages
      openbsd_pkg: name={{ item }} state=present
      with_items: "{{ my_os_packages|default([]) }}"
      tags: [ 'pkg' ]

    - name: group packages
      openbsd_pkg: name={{ item }} state=present
      with_items: "{{ my_grp_packages|default([]) }}"
      tags: [ 'pkg' ]

    - name: download openup
      shell: ftp https://stable.mtier.org/openup && chmod 755 /root/openup
      args:
        chdir: /root
        creates: /root/openup
      tags: ['openup']

    - name: add openup in crontab
      cron:
        name: "run openup"
        hour: "7,18"
        minute: "5"
        job: "/root/openup -c"
      tags: ['openup']

    - name: run openup (if openup_do_update variable is true)
      shell: /root/openup
      when: openup_do_update|default(false)
      tags: ['openup']

- hosts: bignas-webgw
  gather_facts: False
  roles:
    - ansible.nginx

- hosts: bignas
  gather_facts: False
  roles:
    - ansible.nginx

- hosts: fw-vip
  gather_facts: False
  roles:
    - ansible.fw-vip

- include: vps_mgmt/playbook.yml

- hosts: new-fw
  roles:
    - ansible.tinyproxy
    - ansible.bind
    - ansible.dhcpd
    - ansible.tftp-pxelinux
    - ansible.pf
    - ansible.samba
    - ansible.ddclient
    - ansible.pf_blockiplist
    - { role: ansible.openvpn , openvpn_instance: "{{ openvpn_instance_warrior}}" , openvpn_instance_name: warrior  }
  tasks:
    - name: create vpn client openvpn home2vps folder
      file: path=/etc/openvpn_home2vps state=directory owner=root group=_openvpn
      tags: ['openvpn']
    - name: copy required files for vpn client openvpn home2vps
      copy:
        src: "{{ playbook_dir }}/fetched/openvpn/home2vps/"
        dest: /etc/openvpn_home2vps/
        owner: root
        directory_mode: 750
        group: _openvpn
      register: res 
      tags: ['openvpn']

    - name: detect need update
      set_fact:
        update: "{{ true if res.changed else update|default(false) }}"

    - name: generate auth_file.txt for vpn client openvpn home2vps
      copy:
        content: "{{ vault_openvpn_client_home2vps_auth_file  }}"
        dest: /etc/openvpn_home2vps/auth.txt
        owner: root
        group: _openvpn
        mode: 0640
      tags: ['openvpn']
      register: res

    - name: detect need update
      set_fact:
        update: "{{ true if res.changed else update|default(false) }}"

    - name: copy rc script
      copy:
        content: "{{ vault_openvpn_client_home2vps_rc_script }}"
        dest: /etc/rc.d/openvpn_home2vps
        owner: root
        group: wheel
        mode: 0755
      tags: ['openvpn']
      register: res

    - name: detect need update
      set_fact:
        update: "{{ true if res.changed else update|default(false) }}"

    - name: manage openvpn home2vps service state
      service: name=openvpn_home2vps state="{{ 'started' if update|default(false) else 'started' }}" enabled=yes
      tags: ['openvpn']
